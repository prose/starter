{%- comment -%}

The MIT License (MIT)

Copyright (c) Aleksandr Meniailo (deorathemen@gmail.com), Mendeo 2020

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the “Software”), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

{%- endcomment -%}

{%- assign intactTags = “script pre svg textarea” | split: “ “ -%} {%- comment -%} Теги, которые никак не затрагиваются {%- endcomment -%}
{%- assign spaceTags = “p” | split: “ “ -%} {%- comment -%} Теги, внутри которых удаляются отсупы, а переносы строк заменяются пробелами {%- endcomment -%}

{%- assign workTags = intactTags | concat: spaceTags -%}
{%- comment -%} Удаляем комментарии {%- endcomment -%}
{%- assign new_comment_tag = “2e57la4G82XMQr9K” -%}
{%- assign content = content | replace: “<!—“, new_comment_tag | replace: “—>”, new_comment_tag -%}
{%- assign contentArray = content | split: new_comment_tag -%}
{%- assign content = “” -%}
{%- for part in contentArray -%}
	{%- assign mod = forloop.index | modulo: 2 -%}
	{%- if mod != 0 -%}
		{%- assign content = content | append: part -%}
	{%- endif -%}
{%- endfor -%}

{%- comment -%}
Ищем строки, в которых есть интактные теги (из массива intactTags) и ничего там не делаем, а делаем в остальных местах
Также заменяем перенос строк на пробелы в тэгах из массива spaceTags
Тэги, которые мы ищем должны быть окружены пустыми строками
{%- endcomment -%}
{%- for tag in workTags -%}
	{%- assign what = “<“ | append: tag -%}
	{%- assign how = what | prepend: “
“-%}
	{%- assign content = content | replace: what, how -%}
	{%- assign what = “</“ | append: tag | append: “>” -%}
	{%- assign how = what | append: “
“-%}
	{%- assign content = content | replace: what, how -%}
{%- endfor -%}

{%- assign contentArray = content | split: “
“ -%}
{%- assign content = “” -%}
{%- assign currentTag = “~” -%}
{%- assign currentTagIndex = -1 -%}
{%- for part in contentArray -%}
	{%- if currentTag == “~” -%}
		{%- for tag in workTags -%}
			{%- assign what = “<“ | append: tag | append: “ “ -%}
			{%- assign aux1 = part | remove: what | size -%}
			{%- assign what = “<“ | append: tag | append: “>” -%}
			{%- assign aux2 = part | remove: what | size -%}
			{%- if aux1 != part.size or aux2 != part.size -%}
				{%- assign currentTag = tag -%}
				{%- assign currentTagIndex = forloop.index -%}
				{%- comment -%} Что если закрывающий тег на той же строке? {%- endcomment -%}
				{%- assign what = “</“ | append: currentTag | append: “>” -%}
				{%- assign aux = part | remove: what | size -%}
				{%- if aux != part.size -%}
					{%- assign currentTag = “~” -%}
					{%- assign currentTagIndex = -1 -%}
				{%- endif -%}
				{%- break -%}
			{%- endif -%}
		{%- endfor -%}
		{%- if currentTag == “~” -%}
			{%- assign aux = part | strip | replace: “/>”, “>” -%}
			{%- assign aux_size = aux.size -%}
			{%- for i in (1 .. 100) -%} {%- comment -%} Удаляем лишние пробелы перед угловыми скобками {%- endcomment -%}
				{%- assign aux = aux | replace: “ >”, “>” -%}
				{%- if aux_size == aux.size -%}
					{%- break -%}
				{%- endif -%}
			{%- endfor -%}
			{%- assign content = content | append: aux -%}
		{%- else -%}
			{%- if currentTagIndex < intactTags.size -%} {%- comment -%} Зашли в интактный тэг {%- endcomment -%}
				{%- assign aux = part | lstrip | append: “
“-%}
				{%- assign content = content | append: aux -%}
			{%- else -%} {%- comment -%} Зашли в тэг, где переносы строк нужно заменить пробелами {%- endcomment -%}
				{%- assign aux = part | lstrip | append: “ “ -%}
				{%- assign content = content | append: aux -%}
			{%- endif -%}
		{%- endif -%}
	{%- else -%}
		{%- assign what = “</“ | append: currentTag | append: “>” -%}
		{%- assign aux = part | remove: what | size -%}
		{%- if aux != part.size -%}
			{%- assign currentTag = “~” -%}
		{%- endif -%}
		{%- if currentTag == “~” -%}
			{%- if currentTagIndex < intactTags.size -%} {%- comment -%} Конец интактного тэга {%- endcomment -%}
				{%- assign aux = part | rstrip -%}
				{%- assign content = content | append: aux -%}
			{%- else -%} {%- comment -%} Зашли в конец тэга, где переносы строк нужно заменить пробелами {%- endcomment -%}
				{%- assign aux = part | strip -%}
				{%- assign content = content | append: aux -%}
			{%- endif -%}
		{%- else -%}
			{%- if currentTagIndex < intactTags.size -%} {%- comment -%} Зашли в интактный тэг {%- endcomment -%}
				{%- assign aux = part | append: “
“ -%}
				{%- assign content = content | append: aux -%}
			{%- else -%} {%- comment -%} Зашли в тэг, где переносы строк нужно заменить пробелами {%- endcomment -%}
				{%- assign aux = part | strip | append: “ “ -%}
				{%- assign content = content | append: aux -%}
			{%- endif -%}
		{%- endif -%}
	{%- endif -%}
{%- endfor -%}
{{ content }}